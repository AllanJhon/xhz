package com.sjz.zyl.appdemo.utils;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.os.Environment;import com.sjz.zyl.appdemo.AppConfig;import org.kymjs.kjframe.bitmap.ImageDisplayer;import org.kymjs.kjframe.utils.CipherUtils;import org.kymjs.kjframe.utils.FileUtils;import java.io.File;import java.io.FileInputStream;import java.io.FileNotFoundException;/** * Description * * @author by 张迎乐(yingle1991@gmail.com) * @since 2018-02-12. */public class MyImageCache implements ImageDisplayer.ImageCache {    @Override    public Bitmap getBitmap(String url) {        Bitmap b = null;        int IMAGE_MAX_SIZE = 600;        File f = FileUtils.getSaveFile(Environment.getExternalStorageDirectory()+"/"+AppConfig.iamgeCachePath,getOnlyFileName(url));        if (f == null){            return null;        }        //Decode image size        BitmapFactory.Options o = new BitmapFactory.Options();        o.inJustDecodeBounds = true;        FileInputStream fis = null;        try {            fis = new FileInputStream(f);            BitmapFactory.decodeStream(fis, null, o);            fis.close();            int scale = 1;            if (o.outHeight > IMAGE_MAX_SIZE || o.outWidth > IMAGE_MAX_SIZE) {                scale = (int) Math.pow(2, (int) Math.round(Math.log(IMAGE_MAX_SIZE / (double) Math.max(o.outHeight, o.outWidth)) / Math.log(0.5)));            }            //Decode with inSampleSize            BitmapFactory.Options o2 = new BitmapFactory.Options();            o2.inSampleSize = scale;            fis = new FileInputStream(f);            b = BitmapFactory.decodeStream(fis, null, o2);            fis.close();        } catch (Exception e) {            e.printStackTrace();        }        return b;    }    @Override    public void remove(String key) {    }    @Override    public void clean() {    }    @Override    public void putBitmap(String url, Bitmap bitmap) {        FileUtils.bitmapToFile(bitmap,getFileName(url));    }    public String getFileName(String url){        int start_Index=url.lastIndexOf(".");        String fileName= CipherUtils.md5(url)+url.substring(start_Index,url.length());        return Environment.getExternalStorageDirectory()+"/"+AppConfig.iamgeCachePath+fileName;    }    public String getOnlyFileName(String url){        int start_Index=url.lastIndexOf(".");        String fileName= CipherUtils.md5(url)+url.substring(start_Index,url.length());        return fileName;    }}